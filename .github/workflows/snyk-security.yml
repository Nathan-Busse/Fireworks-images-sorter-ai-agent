# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container, and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login

name: Snyk Security

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v3

      # Step 2: Set up Snyk CLI
      - name: Set up Snyk CLI to check for security issues
        uses: snyk/actions/setup@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Step 3: Run Snyk Code (SAST) analysis
      - name: Snyk Code test
        run: snyk code test --sarif > snyk-code.sarif || true

      # Step 4: Run Snyk Open Source (SCA) analysis
      - name: Snyk Open Source monitor
        run: snyk monitor --all-projects || true

      # Step 5: Run Snyk Infrastructure as Code (IaC) analysis
      - name: Snyk IaC test and report
        run: snyk iac test --report || true

      # Step 6: Build a Docker image for testing
      - name: Build a Docker image
        run: docker build -t your/image-to-test .

      # Step 7: Run Snyk Container (Container and SCA) analysis
      - name: Snyk Container monitor
        run: snyk container monitor your/image-to-test --file=Dockerfile || true

      # Step 8: Upload Snyk Code results to GitHub Code Scanning
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
